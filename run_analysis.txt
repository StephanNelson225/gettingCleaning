#Reading in the data
#https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip 
#note since I use a windows 7 machine nothing special needs to happen to open the #zips.  Comments have been minimized for convenience of peer reviewer see codebook
#and read.me for added explaination.  Note: data directory structure is likely the same as what you used in your project rather moving all of the data files your working directory.
# further note: if you have updated R to the most recent version you may have to 
#reinstall or update some of the packages called here.
========================================================

#the training and test sets are combined creating a data.frame  
 #with the dimensions 10299 X 561.  The steps are  
#1. Rbind the following data files together.
#  a. Xtrain and Xtest into a 10299 X 561 data.frame with the data and observations
#  b. X_train and y_train into a 10299 X 1 data.frame of raw activity codes  
#  c. subject_test and subjecttrain into a 10299 X 1 data.frame of subject ids  
#  d. cbind the data.frames together into a 10,299 X 563 data.frame.  
#  e. apply activity names to activity codes 
  

trainXall=read.table("./UCI HAR Dataset/train/X_train.txt", colClasses="numeric")
testXall=read.table("./UCI HAR Dataset/test/X_test.txt",colClasses="numeric")
rawdata<-rbind(trainXall, testXall)
trainyall=read.table("./UCI HAR Dataset/train/y_train.txt", colClasses="numeric")
testyall=read.table("./UCI HAR Dataset/test/y_test.txt",colClasses="numeric")
act1<-rbind(trainyall, testyall)
subjectidtrain=read.table("./UCI HAR Dataset/train/subject_train.txt")
subjectidtest=read.table("./UCI HAR Dataset/test/subject_test.txt")
subj_id=rbind(subjectidtrain, subjectidtest)
colnames(act1)="activity"
colnames(subj_id)="subject"
complete_rawdata<-cbind(rawdata, subj_id, act1) #preserves the order for subsequent subsetting.
activityname<-read.table("./UCI HAR Dataset/activity_labels.txt")
complete_rawdata$activity<-factor(complete_rawdata$activity,levels=activityname$V1, labels=activityname$V2 )





#Get and scope out variable name list of the data. Result is 561 variable names.
colfeature<-read.table("./UCI HAR Dataset/features.txt", colClasses="character")
# Subset the features data to only include mean() and std() columns. 
names <- colfeature[grepl("-mean\\(\\)|-std\\(\\)", colfeature$V2),]

#Gets the variable name list of the data. Result is 561 variable names.  Subset the activity data to only include "mean()" and "std()" columns as that is one reasonable interpretation of the instructions.  This results in 66 columns
colfeature<-read.table("./UCI HAR Dataset/features.txt", colClasses="character")
names <- colfeature[grepl("-mean\\(\\)|-std\\(\\)", colfeature$V2),]


#subset the data on these columns,
refined_rawdata<-complete_rawdata[,c(562,563,as.numeric(names$V1))] #this also reorders data. 562 is "subject" number; 531 is factor "activity" 


#Names are untidy.  Get rid of some unneeded key strokes. First capitalization.  
#Then re-capitalize acc and gyr for clarity. Fix apparent text typos
nameslow<-tolower(names$V2) #lowercase
names_clean1<-gsub("acc", "Acc", nameslow,fixed=TRUE)#emphasize device
names_clean2<-gsub("gyr", "Gyr", names_clean1,fixed=TRUE)#emphasize device
names_clean3<-gsub("bodybody" ,"body", names_clean2)#second body is assumed a typo.
names_clean3


#apply column names to refined data
names(refined_rawdata)<-c("subject","activity",names_clean3)
wearable<-refined_rawdata # add better name


#archive file as wearable.txt
write.table(wearable,"wearable.txt",col.names=TRUE, row.names=FALSE)


# create a second tidy set for submission to Coursera with the average of #each variable for each activity and each subject. 
require(plyr)
require(dplyr) 
require(reshape2)
wearmelt<-melt(wearable, id.var=c("subject","activity"))
dim(wearmelt)# this creates the long format from the wide.
wearablegroups<-group_by(wearmelt, variable, subject, activity)
dim(wearablegroups)#once melted and grouped the dimensins 885715X5 - long format
#instructions:Creates a second, independent tidy data set with the average of each variable for each activity and each subject. This implies the order of variable, subjectid, activity and mean value.
tidywearable<-summarize(wearablegroups, average_for_var_by_subj_activity=round(mean(value),4))
write.table(tidywearable,"tidywearable.txt",row.names=FALSE)# without the row.names false argument, the text file columns don't line up right.



